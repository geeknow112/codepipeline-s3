version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
      php: 8.1
    commands:
      - echo "=== Installing dependencies ==="
      - echo "Node.js version:" && node --version
      - echo "NPM version:" && npm --version
      - echo "PHP version:" && php --version
      - echo "Current directory:" && pwd
      - echo "Directory contents:" && ls -la
      - echo "Installing npm dependencies..."
      - npm install || (echo "NPM install failed" && exit 1)
      - echo "Installing Composer..."
      - curl -sS https://getcomposer.org/installer | php || (echo "Composer download failed" && exit 1)
      - mv composer.phar /usr/local/bin/composer || (echo "Composer move failed" && exit 1)
      - chmod +x /usr/local/bin/composer
      - echo "Composer version:" && composer --version
      - echo "Installing PHP dependencies..."
      - composer install --no-interaction --prefer-dist --optimize-autoloader || (echo "Composer install failed" && exit 1)
      
  pre_build:
    commands:
      - echo "=== Pre-build phase ==="
      - echo "Current directory:" && pwd
      - echo "Directory contents:" && ls -la
      - echo "Node modules check:" && ls -la node_modules/ | head -5
      - echo "Vendor check:" && ls -la vendor/ | head -5
      
  build:
    commands:
      - echo "=== Build phase ==="
      - echo "File existence tests..."
      - test -f index.html && echo "‚úÖ index.html exists" || (echo "‚ùå index.html missing" && exit 1)
      - test -f style.css && echo "‚úÖ style.css exists" || (echo "‚ùå style.css missing" && exit 1)
      - test -f script.js && echo "‚úÖ script.js exists" || (echo "‚ùå script.js missing" && exit 1)
      - echo "Content validation..."
      - grep -q "CodePipeline S3 Demo" index.html && echo "‚úÖ Title found" || (echo "‚ùå Title not found" && exit 1)
      - grep -q "body" style.css && echo "‚úÖ Body styles found" || (echo "‚ùå Body styles not found" && exit 1)
      - echo "Running Jest tests..."
      - npm test || (echo "‚ùå Jest tests failed" && exit 1)
      - echo "Creating test results directory..."
      - mkdir -p tests/results
      - echo "Running PHPUnit tests..."
      - ./vendor/bin/phpunit --verbose || (echo "‚ùå PHPUnit tests failed" && exit 1)
      - echo "PHP syntax check..."
      - find tests -name "*.php" -exec php -l {} \; || (echo "‚ùå PHP syntax check failed" && exit 1)
      - echo "‚úÖ All tests completed successfully"
      
  post_build:
    commands:
      - echo "=== Post-build phase ==="
      - echo "Final directory contents:" && ls -la
      - echo "Test results:" && ls -la tests/results/ || echo "No test results directory"
      - echo "üéâ Build completed successfully"

artifacts:
  files:
    - '**/*'
  exclude-paths:
    - node_modules/**/*
    - vendor/**/*
    - tests/results/**/*
